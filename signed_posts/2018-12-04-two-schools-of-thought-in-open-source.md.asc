-----BEGIN PGP MESSAGE-----
Comment: https://keybase.io/download
Version: Keybase Go 2.11.0 (linux)

xA0DAAoBnt4j6n6KSJABy+F0AOIAAAAA7S0tLQpsYXlvdXQ6IHBvc3QKdGl0bGU6
ICJUaGUgdHdvIHNjaG9vbHMgb2YgdGhvdWdodCBpbiBvcGVuIHNvdXJjZSIKdGFn
czogW2Jsb2ddCi0tLQoKKk9wZW4gc291cmNlKiBtZWFucyBhIGxvdCBvZiBkaWZm
ZXJlbnQgdGhpbmdzIHRvIGRpZmZlcmVudCBwZW9wbGUuIFRvIGJpZyBjb21wYW5p
ZXMsIGl0J3MgYSB3YXkgb2YgZ2VuZXJhdGluZyBhdHRlbnRpb24gYW5kIG1vbWVu
dHVtIHVzaW5nIHRoZWlyIGludGVybmFsIGluZnJhc3RydWN0dXJlLiBUbyBzbWFs
bGVyIGNvbXBhbmllcywgaXQncyBhIGNoZWFwIGFuZCBjcml0aWNhbCBhc3NldCBm
b3IgZ2V0dGluZyB0aGluZ3MgZG9uZS4gVG8gZGV2ZWxvcGVycywgb3BlbiBzb3Vy
Y2UgY2FuIGVpdGhlciBiZSBhIGhvYmJ5IHByb2plY3QsIGEgZnJlZSB0b29sIHRv
IHNvbHZlIHRoZWlyIHByb2JsZW1zIGF0IHdvcmssIG9yIGEgc291cmNlIG9mIGJ1
cm5vdXQuIE5hdHVyYWxseSwgd2hlbiB0YWxraW5nIGFib3V0IG9wZW4gc291cmNl
LCBpdCB3aWxsIGJyaW5nIG91dCBkaWZmZXJlbnQgY29ubm90YXRpb25zIGRlcGVu
ZGluZyBvbiB3aG8geW91J3JlIHRhbGtpbmcgdG8uCgpCdXQgdGhlcmUgaXMgYW5v
dGhlciBkaW1lbnNpb24gdG8gb3BlbiBzb3VyY2UgdGhhdCBpcyBub3Qgb2Z0ZW4g
YWNrbm93bGVkZ2VkOiBtb25vbGl0aGljIHN0eWxlIHZlcnN1cyBtb2R1bGFyIHN0
eWxlIG9mIG9wZW4gc291cmNpbmcgcmV1c2FibGUgY29kZS4gSSdsbCBleHBsYWlu
IHRoZSBtYW55IGRpZmZlcmVuY2VzIGJldHdlZW4gdGhlc2UgdHdvLCBidXQgdGhp
cyBpcyBub3QgYW4gYXJ0aWNsZSBhYm91dCBjb2RlLCBpdCdzIGFuIGFydGljbGUg
YWJvdXQgKnBlb3BsZSogYW5kIGhvdyB0aGV5IGFwcHJvYWNoIHByb2dyYW1taW5n
IGluIGRpZmZlcmVudCB3YXlzLgoKIyMgTW9ub2xpdGhpYyBvciBNb2R1bGFyCgpM
ZXQncyBhc3N1bWUgeW91IHdhbnQgdG8gb3BlbiBzb3VyY2Ugc29tZSB1dGlsaXRp
ZXMgeW91IGJ1aWx0LiBEbyB5b3UgcHV0IHRoZW0gYWxsIGluIG9uZSBwYWNrYWdl
IChsaWtlIFtMb2Rhc2hdKGh0dHA6Ly9sb2Rhc2guY29tLykpIG9yIGRvIHB1Ymxp
c2ggb25lIHV0aWxpdHkgcGVyIHBhY2thZ2UgKGxpa2UgW1NpbmRyZSdzIGxpYnJh
cmllc10oaHR0cHM6Ly9naXRodWIuY29tL3NpbmRyZXNvcmh1cy9hcnJheS11bmlx
KSk/IFRoZSBmaXJzdCBpcyBhIG1vbm9saXRoaWMgYXBwcm9hY2gsIHRoZSBzZWNv
bmQgaXMgYSBtb2R1bGFyIGFwcHJvYWNoLiBUaGUgdGhvdWdodCBwcm9jZXNzZXMg
dGhhdCBnbyBhYm91dCBkZWZlbmRpbmcgb25lIHN0eWxlIG9yIHRoZSBvdGhlciBk
ZWZpbmUgYSBzY2hvb2wgb2YgdGhvdWdodC4gVGhlcmUgaXMgbm8gcmlnaHQgb3Ig
d3JvbmcgaGVyZSwgdGhlc2UgYXJlIHNpbXBseSBkaWZmZXJlbnQgd2F5cyBvZiBk
b2luZyB0aGUgc2FtZSB0aGluZy4KClRoZSBjaG9pY2UsIGVpdGhlciBtb25vbGl0
aGljIG9yIG1vZHVsYXIsIHdpbGwgaGVhdmlseSBpbmZsdWVuY2Ugd2hhdCBwZW9w
bGUgZXhwZWN0IGZyb20gdGhlIGxpYnJhcnkuIEl0IGFmZmVjdHMgcHJvamVjdCBm
dW5kaW5nLCBob3cgcGVvcGxlIHN1Ym1pdCBpc3N1ZXMsIGhvdyBwZW9wbGUgc2Vu
ZCBwdWxsIHJlcXVlc3RzLCBhbmQgaG93IHBlb3BsZSBleHBlY3QgdGhlIHByb2pl
Y3QgdG8gZXZvbHZlLiBJZiBwb2xpdGljcyBoYXZlIHRoZSBMZWZ0IGFuZCB0aGUg
UmlnaHQsIG9wZW4gc291cmNlIGhhcyBNb2R1bGFyIGFuZCBNb25vbGl0aGljOiB0
d28gd2F5cyBvZiB0aGlua2luZyBhbmQgd29ya2luZyB3aXRoIG9wZW4gc29mdHdh
cmUsIHRoYXQgaGF2ZSBkaWZmZXJlbnQgYXNwaXJhdGlvbnMuIEl0J3Mgbm90IGEg
cHJvcGVydHkgb2Ygc29mdHdhcmUgaXRzZWxmLCBpdCBpcyAqY3VsdHVyZSBidWls
dCBpbnRvIHNvZnR3YXJlKi4KCiMjIFdoYXQgbW9ub2xpdGhpYyB0aGlua2luZyBs
b29rcyBsaWtlCgpbIVtBIGxhcHRvcCB3aXRoIG9uZSBzdGlja2VyLCB0aGUgV29y
ZFByZXNzIHN0aWNrZXJdKC9pbWcvbW9ub2xpdGhpYy1sYXB0b3AucG5nKV0oL2lt
Zy9tb25vbGl0aGljLWxhcHRvcC5wbmcpCgpUaGUgbW9ub2xpdGhpYyBzY2hvb2wg
b2YgdGhvdWdodCBjb25zaWRlcnMgKipzb2Z0d2FyZSB0byBiZSBhIHNlcnZpY2Uq
KiB0aGF0IGF1dGhvcnMgYnVpbGQgYWltaW5nIGF0IHNvbHZpbmcgYSBsYXJnZSBw
cm9ibGVtIG9yIGEgY2F0ZWdvcnkgb2YgcHJvYmxlbXMuICoqRXhhbXBsZXMgYXJl
Kio6IFtXb3JkUHJlc3NdKGh0dHBzOi8vZ2l0aHViLmNvbS9Xb3JkUHJlc3MvV29y
ZFByZXNzLyksIFtMaW51eF0oaHR0cHM6Ly9naXRodWIuY29tL3RvcnZhbGRzL2xp
bnV4KSwgW1JlYWN0IE5hdGl2ZV0oaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29r
L3JlYWN0LW5hdGl2ZSksIFtEamFuZ29dKGh0dHBzOi8vZ2l0aHViLmNvbS9kamFu
Z28vZGphbmdvKSwgW0VsZWN0cm9uXShodHRwczovL2dpdGh1Yi5jb20vZWxlY3Ry
b24vZWxlY3Ryb24pLCBbUmVhY3RpdmVYXShodHRwczovL2dpdGh1Yi5jb20vUmVh
Y3RpdmVYLyksIFtXZWJwYWNrXShodHRwczovL2dpdGh1Yi5jb20vd2VicGFjay93
ZWJwYWNrKSwgYW5kIGFsbCBraW5kcyBvZiBmcmFtZXdvcmtzLiBUaGVzZSBhcmUg
cHJvamVjdHMgdGhhdCBtYXkgaGF2ZSBtYW55IGNvbW1pdHMsIG1hbnkgbGluZXMg
b2YgY29kZSwgYW5kIG1heSBjaGFuZ2Ugc2lnbmlmaWNhbnRseSBvdmVyIHRpbWUu
IEluIGZhY3QsIGxhcmdlIGNoYW5nZXMgYXJlIHNlZW4gYXMgYSBnb29kIHRoaW5n
LCBvZnRlbiBhIHN5bm9ueW0gb2YgZXZvbHV0aW9uIGFzIHRoZSBwcm9qZWN0IGJl
dHRlciBhZGFwdHMgdG8gdGhlIGdvYWwgaXQgYWltcyBmb3IuIE1vbm9saXRoaWMg
dGhpbmtpbmcgdGFrZXMgcHJpZGUgaW4gdGhlIGRlcHRoIGFuZCBicmVhZHRoIG9m
IHRoZSB1c2UgY2FzZXMgZm9yIHRoZSBzb2Z0d2FyZS4KCldpdGggbW9ub2xpdGhp
YyBvcGVuIHNvdXJjZSBwcm9qZWN0cywgKipwZW9wbGUncyBleHBlY3RhdGlvbnMq
KiBhcmU6CgotIFNldmVyYWwgYW5kIGZyZXF1ZW50IGNvbW1pdHMgaW5kaWNhdGUg
cHJvamVjdCBxdWFsaXR5Ci0gSXNzdWVzLCB3aGVuIHNldmVyYWwsIGluZGljYXRl
IHByb2plY3QgcG9wdWxhcml0eQotIFRoZXJlIGFyZSBvZmZpY2lhbCBhbmQgZGVk
aWNhdGVkIG1haW50YWluZXJzIHdvcmtpbmcgb24gaXNzdWVzCi0gVGhlIHByb2pl
Y3QgaXMgbmFtZWQgYXMgYSBicmFuZAotIEZlYXR1cmVzIHdpbGwgY29udGludW91
c2x5IGJlIGFkZGVkCgpUaGUgYnVsayBvZiB0aGUgd29yayBmb3IgYSBtb25vbGl0
aGljIHByb2plY3QgaXMgZG9uZSBpbiB0aGUgKmxvbmcgdGFpbCogb2YgY29tbWl0
cy4KClshW0NvbW1pdHMgY2hhcnQgZm9yIERqYW5nb10oL2ltZy9jb21taXRzLWRq
YW5nby5wbmcpXSgvaW1nL2NvbW1pdHMtZGphbmdvLnBuZykKCjxzbWFsbD48ZW0+
Q29tbWl0cyBpbiB0aGUgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2RqYW5n
by9kamFuZ28vZ3JhcGhzL2NvbnRyaWJ1dG9ycyI+RGphbmdvPC9hPiBmcmFtZXdv
cms8L2VtPjwvc21hbGw+CgpUaGVyZWZvcmUsICoqZnVuZGluZyoqIGlzIGFpbWVk
IGF0IGNvbnN0YW50bHkgcmVkdWNpbmcgYnVnIGNvdW50LCBhZGRpbmcgZmVhdHVy
ZXMsIG1ha2luZyBsYXJnZSByZXdyaXRlcywgc3VwcG9ydGluZyBjb21tdW5pdHkg
ZXZlbnRzIGFuZCBjb25mZXJlbmNlcy4gRnVuZGluZyBtYXkgb25seSBiZWdpbiBt
YW55IG1vbnRocyBvciB5ZWFycyBhZnRlciB0aGUgcHJvamVjdCB3YXMgYmVndW4u
CgpUaGUgbW9ub2xpdGhpYyBzY2hvb2wgb2YgdGhvdWdodCBpcyByb290ZWQgaW4g
U2lsaWNvbiBWYWxsZXkncyBsYXJnZSBjb21wYW5pZXMgd2l0aCBhIGRldmVsb3Bt
ZW50IGN1bHR1cmUgb2YgW21vbm9yZXBvc10oaHR0cHM6Ly9lbi53aWtpcGVkaWEu
b3JnL3dpa2kvTW9ub3JlcG8pIGFuZCAqcHJvZ3Jlc3MgdGhyb3VnaCBicmVha2lu
ZyBjaGFuZ2VzKi4KCiMjIFdoYXQgbW9kdWxhciB0aGlua2luZyBsb29rcyBsaWtl
CgpbIVtBIGxhcHRvcCB3aXRoIG1hbnkgc3RpY2tlcnMgb2YgbW9kdWxhciBsaWJy
YXJpZXNdKC9pbWcvbW9kdWxhci1sYXB0b3AucG5nKV0oL2ltZy9tb2R1bGFyLWxh
cHRvcC5wbmcpCgpUaGUgbW9kdWxhciBzY2hvb2wgb2YgdGhvdWdodCBjb25zaWRl
cnMgKipzb2Z0d2FyZSB0byBiZSBhIGNvZ3doZWVsKiogdGhhdCBhdXRob3JzIGJ1
aWxkIGFpbWluZyBhdCBzb2x2aW5nIGEgc3BlY2lmaWMgcHJvYmxlbSBpbnRlcm9w
ZXJhdGluZyB3aXRoIG90aGVyIGNvZ3doZWVscy4gRXhhbXBsZXMgYXJlOiBbQnJv
d3NlcmlmeV0oaHR0cHM6Ly9naXRodWIuY29tL2Jyb3dzZXJpZnkvKSB1dGlsaXRp
ZXMsIFtDYWxsYmFnXShodHRwczovL2dpdGh1Yi5jb20vY2FsbGJhZy9jYWxsYmFn
KSwgTm9kZS5qcyBbTGV2ZWxEQl0oaHR0cHM6Ly9naXRodWIuY29tL0xldmVsKSwg
W1B1bGwgU3RyZWFtXShodHRwczovL2dpdGh1Yi5jb20vcHVsbC1zdHJlYW0vKSwg
W1NpbmRyZSBTb3JodXMnIHRpbnkgbGlicmFyaWVzXShodHRwczovL2dpdGh1Yi5j
b20vc2luZHJlc29yaHVzP3RhYj1yZXBvc2l0b3JpZXMpLCBbUmVhY3QgY29tbXVu
aXR5IGNvbXBvbmVudHNdKGh0dHBzOi8vZ2l0aHViLmNvbS9icmlsbG91dC9hd2Vz
b21lLXJlYWN0LWNvbXBvbmVudHMpLiBUaGVzZSBhcmUgcHJvamVjdHMgdGhhdCBh
cmUgdHlwaWNhbGx5IHNtYWxsIGluIHNpemUsIHNvbHZlIGEgdmVyeSBzcGVjaWZp
YyBwcm9ibGVtLCBhbmQgdXN1YWxseSBkbyBub3Qgc2lnbmlmaWNhbnRseSBjaGFu
Z2UgYWZ0ZXIgdGhleSBhcmUgcHVibGlzaGVkLiBJbiBmYWN0LCBpdHMgaW1tdXRh
YmlsaXR5IGlzIG9mdGVuIHNlZW4gYXMgYSBnb29kIHRoaW5nLCBhIHN5bm9ueW0g
dGhhdCB0aGUgcHJvamVjdCBpcyAiZG9uZSIuIE1vZHVsYXIgdGhpbmtpbmcgdGFr
ZXMgcHJpZGUgaW4gdGhlIGludGVyb3BlcmFiaWxpdHkgd2l0aCBvdGhlciBtb2R1
bGVzIGFuZCB0aGUgZmFjdCB0aGF0IGl0IGNhbiBhZmZvcmQgdG8gZnVsbHkgc29s
dmUgb25lIHNwZWNpZmljIHByb2JsZW0uCgpXaXRoIG1vZHVsYXIgb3BlbiBzb3Vy
Y2UgcHJvamVjdHMsICoqcGVvcGxlJ3MgZXhwZWN0YXRpb25zKiogYXJlOgoKLSBT
ZXZlcmFsIG1vZHVsZXMgYXJvdW5kIGEgbGFyZ2VyIGNhdGVnb3J5IGluZGljYXRl
IGFuIGFjdGl2ZSBjb21tdW5pdHkKLSBTb3VyY2UgY29kZSBpcyByZWFkYWJsZSwg
c21hbGwsIGFuZCBlYXN5IHRvIGZvcmsKLSBJc3N1ZXMsIHdoZW4gbWFueSwgaW5k
aWNhdGUgYSBwcm9ibGVtIHdpdGggdGhlIG1vZHVsZQotIFRoZSBwcm9qZWN0IGlz
IG5hbWVkIGJ5IHV0aWxpdHksIG5vdCBicmFuZCAoZS5nLiBgc3RyZWFtLXRvLXB1
bGwtc3RyZWFtYCwgbm90IE1vY2hhY2Npbm8pCi0gVGhlIG1vZHVsZSdzIHVzYWdl
IGFuZCBBUEkgaXMgc2ltaWxhciB0byBvdGhlciBtb2R1bGVzJyBBUElzCgpUaGUg
YnVsayBvZiB0aGUgd29yayBmb3IgYSBtb2R1bGFyIHByb2plY3QgaXMgZG9uZSBp
biB0aGUgKmdlbmVzaXMqIG9mIHRoZSByZXBvc2l0b3J5LgoKWyFbQ29tbWl0IGNo
YXJ0IGZvciBwdWxsLXdzXSgvaW1nL2NvbW1pdHMtcHVsbC13cy5wbmcpXSgvaW1n
L2NvbW1pdHMtcHVsbC13cy5wbmcpCgo8c21hbGw+PGVtPkNvbW1pdHMgaW4gdGhl
IDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9wdWxsLXN0cmVhbS9wdWxsLXdz
L2dyYXBocy9jb250cmlidXRvcnMiPnB1bGwtd3M8L2E+IGxpYnJhcnk8L2VtPjwv
c21hbGw+CgoqKkZ1bmRpbmcqKiBpcyB1c3VhbGx5IGFpbWVkIGF0IHRoYW5raW5n
IGZvciBleGlzdGluZyB3b3JrIHRoYXQgd2lsbCBubyBsb25nZXIgcmVjZWl2ZSB1
cGRhdGVzLCBvciBhaW1lZCBhdCBzcGVjaWZpYyBvcGVuIHNvdXJjZSBhdXRob3Jz
IGtub3duIHRvIHByb2R1Y2UgbWFueSBtb2R1bGVzLgoKVGhlIG1vZHVsYXIgc2No
b29sIG9mIHRob3VnaHQgdHJhY2VzIGJhY2sgdG8gdGhlIFtVbml4IHBoaWxvc29w
aHldKGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL1VuaXhfcGhpbG9zb3Bo
eSkgYW5kIGlzIG5vdyBjaGFtcGlvbmVkIGJ5IG9wZW4gc291cmNlIGhhY2tlcnMs
IHBhcnRpY3VsYXJseSBpbiB0aGUgTm9kZS5qcyBjb21tdW5pdHkuCgojIyBXaGVu
IGl0IGdldHMgbWl4ZWQgdXAKCldoZW4gbW9ub2xpdGhpYyBhZGhlcmVudHMgbG9v
ayBhdCBhIG1vZHVsYXIgcHJvamVjdCwgdGhleSBtYXkgdGhpbmsgdGhhdCBpdCdz
IGxvdyBxdWFsaXR5IG9yIGFiYW5kb25lZCBzaW1wbHkgYmVjYXVzZSBjb21taXQg
Y291bnQgaXMgbG93IGFuZCByYXJlLCBuZXcgZmVhdHVyZXMgYXJlIG5vdCBiZWlu
ZyBhZGRlZCwgYW5kIHRoZSBwcm9qZWN0IGhhcyBubyBmdW5kaW5nIG9yIGNvbW11
bml0eSBldmVudHMuIEludGVyZXN0aW5nbHksIHRoZXNlIHNhbWUgcHJvcGVydGll
cyBhcmUgd2hhdCBtb2R1bGFyIGFkaGVyZW50cyB3aWxsIHBlcmNlaXZlIGFzICph
IGdvb2QgdGhpbmcqLCBsaWtlbHkgdG8gaW5kaWNhdGUgdGhhdCB0aGUgbW9kdWxl
IGlzIGNvbXBsZXRlLiBNb25vbGl0aGljIGFkaGVyZW50cyBkb24ndCBiZWxpZXZl
IGEgcHJvamVjdCBjb3VsZCBldmVyIGJlICJjb21wbGV0ZSIuCgpPbiB0aGUgb3Ro
ZXIgc2lkZSBvZiB0aGUgd2FsbCwgd2hlbiBtb2R1bGFyIGFkaGVyZW50cyBsb29r
IGF0IGEgbW9ub2xpdGhpYyBwcm9qZWN0LCB0aGV5IG1heSBmZWFyIHVzaW5nIGl0
IGZvciBiZWluZyB0b28gbGFyZ2UgdG8gcmVhZCBpdHMgc291cmNlIGNvZGUsIGV2
b2x2aW5nIGEgbG90IG92ZXIgdGltZSwgYnJpbmcgdG9vIG1hbnkgZmVhdHVyZXMg
d2hlbiB0aGV5IGFyZSBvbmx5IGxvb2tpbmcgZm9yIG9uZSBzcGVjaWZpYyBmZWF0
dXJlLiBUaGVzZSBzYW1lIHByb3BlcnRpZXMgYXJlIHdoYXQgbW9ub2xpdGhpYyBh
ZGhlcmVudHMgd2lsbCBwZXJjZWl2ZSBhcyAqYSBnb29kIHRoaW5nKi4gTW9kdWxh
ciBhZGhlcmVudHMgZG9uJ3QgYmVsaWV2ZSBsYXJnZSBzb2Z0d2FyZSBjYW4gYmUg
c2VjdXJlIGFuZCBwZXJmb3JtYW50LCBvciB0aGF0IGNvbnN0YW50bHkgY2hhbmdp
bmcgc29mdHdhcmUgY291bGQgYmUgcmVsaWFibGUuCgpBIGxvdCBvZiB0b3BpY3Mg
Y2FuIGRpdmlkZSBwcm9ncmFtbWVycywgbGlrZSB0YWJzIHZlcnN1cyBzcGFjZXMs
IG9yIHNlbWljb2xvbnMgdmVyc3VzIG5vIHNlbWljb2xvbnMsIGJ1dCB0aGUgbW9u
b2xpdGhpYyB2ZXJzdXMgbW9kdWxhciBkZWJhdGUgaXMgbm90IHNvIG9idmlvdXMg
d2hlbiBpdCBvY2N1cnMuIE9mdGVuLCBpdCdzIG1hZGUgaGFyZGVyIGJ5IHRoZSBm
YWN0IHRoYXQgc29tZSBwcm9qZWN0cyBhcmUgYSBiaXQgbW9ub2xpdGhpYyBpbiBz
b21lIHdheXMsIGEgYml0IG1vZHVsYXIgaW4gb3RoZXIgd2F5cy4KCkkgaGF2ZSBo
YWQgZXhwZXJpZW5jZSB3aXRoIHRocmVlIHByb2plY3RzIG9mIHRoZSBzYW1lIHR5
cGUgKHJlYWN0aXZlIHN0cmVhbSBwcm9ncmFtbWluZyBpbiBKYXZhU2NyaXB0KSBi
dXQgb24gZGlmZmVyZW50IGVuZHMgb2YgdGhlIG1vbm9saXRoaWMtbW9kdWxhciBz
cGVjdHJ1bToKCi0gW1J4SlNdKGh0dHBzOi8vZ2l0aHViLmNvbS9SZWFjdGl2ZVgv
cnhqcykgaXMgbW9ub2xpdGhpYwotIFt4c3RyZWFtXShodHRwczovL2dpdGh1Yi5j
b20vc3RhbHR6L3hzdHJlYW0pIGlzIGh5YnJpZCBtb25vbGl0aGljLW1vZHVsYXIK
LSBbQ2FsbGJhZ10oaHR0cHM6Ly9naXRodWIuY29tL2NhbGxiYWcvY2FsbGJhZykg
aXMgbW9kdWxhcgoKQSB2ZXJ5IGludGVyZXN0aW5nIGNhc2UgaXMgUmVhY3QuIFdo
ZW4gaXQgd2FzIHB1Ymxpc2hlZCBpdCB3YXMgcXVpdGUgbW9ub2xpdGhpYywgY29t
cHJpc2luZyBvZiBtYW55IHJlc3BvbnNpYmlsaXRpZXMsIGJ1dCB0aGVzZSBhcmUg
bGF0ZWx5IGJlaW5nIGZhY3RvcmVkIG91dCBhcyBhIG1vZHVsZXM6IHJlYWN0LCBy
ZWFjdC1kb20sIHByb3AtdHlwZXMsIHJlYWN0LXRlc3QtcmVuZGVyZXIsIGV0Yy4g
TW9yZSBjbGVhcmx5LCBSZWFjdCdzIG1haW4gYWNoaWV2ZW1lbnQg4oCTIFVJIGVu
Y2Fwc3VsYXRpb24gYW5kIHJldXNhYmlsaXR5IOKAkyBjcmVhdGVkIGEgY29tbW9u
IGNvbnRyYWN0IHRoYXQgVUkgY29tcG9uZW50cyBjb3VsZCB1c2UuIEFzIGEgcmVz
dWx0LCB0aGUgY29tbXVuaXR5IG9mIFJlYWN0IGNvbXBvbmVudHMgaXMgYSBzdHJv
bmcgZXhhbXBsZSBvZiBtb2R1bGFyIHRoaW5raW5nLgoKV2hhdCBJJ3ZlIGxlYXJu
ZWQgZnJvbSBv6mJzZXJ2aW5nIHRoZXNlIHByb2plY3RzIGlzIHRoYXQgbW9kdWxh
ciB0aGlua2luZyByZXF1aXJlcyBhICpzbWFsbCBjb25zZW5zdXMgY29udHJhY3Qq
IHdoaWNoIHByb3ZpZGVzIHRoZSBpbnRlcm9wZXJhYmlsaXR5LCBhbmQgdGhpcyBj
b25zZW5zdXMgaW50ZXJvcCBwb2ludCBzaG91bGQgbm90IGNoYW5nZSBvdmVyIHRp
bWUuIEZvciBleGFtcGxlLCBpbiBDYWxsYmFnIHRoZSBjb3JlIGlzIHNpbXBseSBh
IFtzcGVjXShodHRwczovL2dpdGh1Yi5jb20vY2FsbGJhZy9jYWxsYmFnKSwgd2l0
aCBubyB1c2FibGUgY29kZSB0byBpbXBvcnQuIEFjdHVhbCBjb2RlIGlzIGxlZnQg
dG8gW2luZGl2aWR1YWwgbGlicmFyaWVzXShodHRwczovL2dpdGh1Yi5jb20vY2Fs
bGJhZy9jYWxsYmFnL3dpa2kpIHRoYXQgYWRoZXJlIHRvIHRoZSBzbWFsbCBzcGVj
LCBidXQgcHJvdmlkZSB2ZXJ5IHNwZWNpZmljIHNvbHV0aW9ucy4gQXMgYW5vdGhl
ciBleGFtcGxlLCBvbGQgUmVhY3QgY29tcG9uZW50cyB3cml0dGVuIHdpdGggYGNy
ZWF0ZUNsYXNzKG9iailgIHNob3VsZCBzdGlsbCB3b3JrIHdpdGggbmV3ZXIgdmVy
c2lvbnMgb2YgUmVhY3QsIGV2ZW4gdGhvdWdoIG5ldyBzdHlsZXMgYW5kIHNoYXBl
cyBhcmUgbW9yZSBjb21tb24gdG9kYXksIHNob3dpbmcgdGhhdCBSZWFjdCBwcm92
aWRlcyBhIHNtYWxsIGNvcmUgdGhhdCBkZWNlbnRyYWxpemVkIGNvbW11bml0eSBj
b21wb25lbnRzIGNhbiB1dGlsaXplIHRvIGludGVyb3BlcmF0ZS4KCldpdGhvdXQg
YWltaW5nIGZvciBpbnRlcm9wZXJhYmlsaXR5IGFzIGEgcHJpb3JpdHksIG1vbm9s
aXRoaWMgdGhpbmtpbmcgY2FuIGFmZm9yZCBtb3JlIGJyZWFraW5nIGNoYW5nZXMg
dGhhdCBhbGxvdyBmdW5kYW1lbnRhbCBzaGlmdHMgaW4gdGhlIHByb2plY3QuIEFu
IGV4YW1wbGUgd291bGQgYmUgdGhlIHRyYW5zaXRpb24gZnJvbSBBbmd1bGFyIDEg
dG8gQW5ndWxhciAyLiBUaGlzIGNhbiBnaXZlIHRoZSBhcHBlYXJhbmNlIG9mIHBy
b2dyZXNzaXZpc20gdG8gbW9ub2xpdGhpYyDpcHJvamVjdHMgYW5kIGNvbnNlcnZh
dGlzbSB0byBtb2R1bGFyIHByb2plY3RzLgoKIyMgQ29uY2x1c2lvbgoKV2hlbiB3
ZSB0YWxrIGFib3V0IG9wZW4gc291cmNlIGluIGEgYnJvYWQgc2Vuc2UsIGl0J3Mg
aW1wb3J0YW50IHRvIGNvbnNpZGVyIHdoYXQgcGVvcGxlIG1lYW4gd2l0aCBpdCwg
YW5kIHdoYXQga2luZCBvZiB0eXBpY2FsIHByb2plY3QgY29tZXMgdG8gbWluZC4g
RnVuZGluZyBtb2R1bGFyIG9wZW4gc291cmNlIGxvb2tzIHZhc3RseSBkaWZmZXJl
bnQgdG8gZnVuZGluZyBtb25vbGl0aGljIG9wZW4gc291cmNlLiAiTWFpbnRlbmFu
Y2UiIChhcyBhIGpvYikgbWF5IG9ubHkgbWFrZSBzZW5zZSBmb3IgbW9ub2xpdGhp
YyBwcm9qZWN0cy4gTWVhc3VyZW1lbnRzIG9mIHF1YWxpdHkgYW5kIG1haW50ZW5h
bmNlIChzdWNoIGFzIHRob3NlIG9uIG5wbSBzZWFyY2ggcmVzdWx0cykgbWF5IGJl
IGJpYXNlZCB0b3dhcmQgbW9ub2xpdGhpYyBwcm9qZWN0cy4gVGhlIHdvcmtsb2Fk
IHRoYXQgaXQgdGHoa2VzIHRvIGJ1aWxkIGEgbW9kdWxhciBwcm9qZWN0IGNvdWxk
IG5ldmVyIGNvdmVyIHRoZSBuZWNlc3NhcnkgZWZmb3J0IGZvciBhIG1vbm9saXRo
aWMgcHJvamVjdC4KCkl0J3MgYXMgaWYgdGhlcmUgYXJlIHR3byBjb21wbGV0ZWx5
IGRpZmZlcmVudCBpZGVhcyBvdXQgdGhlcmUgb2Ygd2hhdCBhICJnb29kIG9wZW4g
c291cmNlIHByb2plY3QiIGxvb2tzIGxpa2UsIGFuZCB3ZSBjb3VsZCBiZSBjb21t
dW5pY2F0aW5nIGJldHRlciB3aGF0IHdlIG1lYeRuIHdpdGggb3VyIGV4cGVj43Rh
dGlvbnMu4AoAwsBcBAABCgAQBQJcBodvCRCe3iPqfopIkAAA8dgIAAh/vZ0Xi1ab
X5ysOIfpxz2AyGxAujn74MTQMSW2M8jsxrC1wWvTWAdkNLx/uYG2qj09lo6hc7cW
puBlc0i14HGJFWTwX0UCx8UyhLq2l2yXNP3iFNGN8VDCRTpWvDhoReZPKAcGjl34
SZHAExvY6csVOJXRCJk4Fhdv/I/5AsrERVC3XnC8r2vxwqCLdW47UyghEKCRtuV4
kGbmswG4bf2ykEPT8X1h6mRAAEweJ7+lNsOtU0VHUuPHunF85WjJb5xK7x/A6gw1
pFOH0vmZifU5y9NbnoFDSbpWjeZMwDaTTRVmW8e3e9JOatfw5d/+Ywg9FosFj0m6
PddDlXtxgYA=
=YPjN
-----END PGP MESSAGE-----
